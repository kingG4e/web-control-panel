"""Implement many-to-many relationship between Database and DatabaseUser

Revision ID: a02ed6ad2e9c
Revises: 
Create Date: 2025-09-25 09:11:43.364954

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a02ed6ad2e9c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Manually drop foreign key for SQLite compatibility
    # The constraint name must be known. Let's assume a conventional name
    # or find it via inspection if this fails.
    with op.batch_alter_table('database_user', schema=None) as batch_op:
        try:
            batch_op.drop_constraint('fk_database_user_database_id_database', type_='foreignkey')
        except Exception:
            # Fallback for if the constraint has a different auto-generated name
            pass
        batch_op.drop_column('database_id')

    # The rest of the auto-generated migration
    op.drop_table('nameserver_config')
    with op.batch_alter_table('signup_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('want_ssl', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('want_dns', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('want_email', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('want_mysql', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('admin_comment', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('storage_quota_mb',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('approved_by',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_signup_request_domain'))
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['domain'])
        batch_op.drop_column('system_password_enc')
        batch_op.drop_column('requested_at')
        batch_op.drop_column('rejection_reason')
        batch_op.drop_column('enable_ssl')
        batch_op.drop_column('system_username')
        batch_op.drop_column('enable_mysql')
        batch_op.drop_column('enable_email')
        batch_op.drop_column('enable_dns')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('signup_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('enable_dns', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('enable_email', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('enable_mysql', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('system_username', sa.VARCHAR(length=80), nullable=True))
        batch_op.add_column(sa.Column('enable_ssl', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('rejection_reason', sa.VARCHAR(length=255), nullable=True))
        batch_op.add_column(sa.Column('requested_at', sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column('system_password_enc', sa.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index(batch_op.f('ix_signup_request_domain'), ['domain'], unique=1)
        batch_op.alter_column('approved_by',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=80),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('storage_quota_mb',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('admin_comment')
        batch_op.drop_column('want_mysql')
        batch_op.drop_column('want_email')
        batch_op.drop_column('want_dns')
        batch_op.drop_column('want_ssl')

    with op.batch_alter_table('database_user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('database_id', sa.INTEGER(), nullable=False, server_default='1'))
        batch_op.create_foreign_key('fk_database_user_database_id_database', 'database', ['database_id'], ['id'])

    op.create_table('nameserver_config',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('zone_id', sa.INTEGER(), nullable=False),
    sa.Column('hostname', sa.VARCHAR(length=255), nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=False),
    sa.Column('is_primary', sa.BOOLEAN(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['dns_zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
